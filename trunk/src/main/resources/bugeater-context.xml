<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jndi="http://www.springframework.org/schema/jndi"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd 
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop.xsd 
    http://www.springframework.org/schema/tx  
    http://www.springframework.org/schema/tx/spring-tx.xsd 
    http://www.springframework.org/schema/jndi 
    http://www.springframework.org/schema/jndi/spring-jndi.xsd 
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util.xsd"
>
    <!--
    	Configurer that replaces ${...} placeholders with values from
    	properties files.
    -->
    <bean
    	id="propertyConfigurer"
    	class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
    >
        <property name="locations">
        	<!-- The properties files to look in for keys -->
            <list>
				<!-- Standard configuration compiled into war -->
                <value>classpath:configure.properties</value>
				<!-- A configuration located on the filesystem outside the war -->
				<value>file:///etc/bugeater/configure.properties</value>
				<!-- A configuration path that is useful for testing/debugging purposes -->
				<value>classpath:configure.${user.name}.properties</value>
            </list>
        </property>
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
		<property name="ignoreResourceNotFound" value="true"/>
    </bean>
   
   	<!-- BeanPostprocessor to enforce @Required annotation on bean setter methods -->
	<bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor" />

	<!-- JDBC Data Source Config -->
<!--
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName">
			<value>${jdbc.driver}</value>
		</property>
		<property name="url"><value>${jdbc.url}</value></property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
	</bean>
-->

	
	<!-- JNDI Data Source Config -->
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>${datasource.jndiName}</value>
		</property>
		<property name="cache"><value>true</value></property>
		<property name="lookupOnStartup"><value>true</value></property>
	</bean>

	<!-- Hibernate Configuration -->

	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource"><ref local="dataSource"/></property>
        <property name="annotatedClasses">
            <list>
				<value>bugeater.domain.Attachment</value>
				<value>bugeater.domain.Issue</value>
				<value>bugeater.domain.IssueStatusChange</value>
				<value>bugeater.domain.LookupValue</value>
				<value>bugeater.domain.Note</value>
				<value>bugeater.domain.ReleaseVersion</value>
				<!--
				 If the user provides his own implementation of the
				 authentication and user services, the following
				 declaration is not needed.
				-->
				<value>bugeater.simpleuser.User</value>
            </list>
        </property>
		
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.jdbc.batch_size">0</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="show_sql">true</prop>
                <prop key="use_outer_join">true</prop>
            </props>
        </property>
        
        <property name="schemaUpdate"><value>true</value></property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
    </bean>
    <!-- Annotation driven transaction demarkation -->
    <tx:annotation-driven/>
    
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

	<!-- Configuration of DAOs -->
	
    <bean id="attachmentDao" class="bugeater.hibernate.AttachmentDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
	
    <bean id="issueDao" class="bugeater.hibernate.IssueDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
	
    <bean id="lookupValueDao" class="bugeater.hibernate.LookupValueDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
	
    <bean id="noteDao" class="bugeater.hibernate.NoteDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
	
    <bean id="releaseVersionDao" class="bugeater.hibernate.ReleaseVersionDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

	<!-- Configuration of Services -->

	<!--
		The user may modify this bean entry and provide an implemention of the
		bugeater.service.UserService interface.
	  -->
    <bean id="userService" class="bugeater.simpleuser.UserServiceImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

	<!--
		The user may modify this bean entry and provide an implemention of the
		bugeater.service.AuthenticationService interface.
	  -->
    <bean id="authenticationService" class="bugeater.simpleuser.AuthenticationServiceImpl">
        <property name="userService" ref="userService"/>
    </bean>

    <bean id="searchService" class="bugeater.service.impl.SearchServiceImpl">
    	<property name="indexDirectory">
    		<value>${lucene.indexdir}</value>
    	</property>
        <property name="issueDao" ref="issueDao"/>
        <property name="noteDao" ref="noteDao"/>
    </bean>
	
	<!--
		This implementation of the MailService is dependent on wicket classes.
		This implementation would not be appropriate for non-wicket
		applications.
	-->
    <bean id="mailService" class="bugeater.service.impl.MailServiceImpl">
    	<property name="fromAddressString">
    		<value>${notification.from.email}</value>
    	</property>
		<property name="mailLogin"><value>${smtp.login}</value></property>
		<property name="mailPassword"><value>${smtp.password}</value></property>
		<property name="mailServer"><value>${smtp.server}</value></property>
		<property name="notificationEmailAddressString">
			<value>${notification.to.email}</value>
		</property>
		<property name="port"><value>${smtp.port}</value></property>
		<property name="sslUsed" value="${smtp.usessl}"/>
    </bean>
	
    <bean id="attachmentService" class="bugeater.service.impl.AttachmentServiceImpl">
        <property name="attachmentDao" ref="attachmentDao"/>
        <property name="attachmentDir">
        	<value>${attachments.dir}</value>
        </property>
    </bean>
	
    <bean id="issueService" class="bugeater.service.impl.IssueServiceImpl">
        <property name="issueDao" ref="issueDao"/>
		<property name="lookupValueDao" ref="lookupValueDao"/>
		<property name="mailService" ref="mailService"/>
		<property name="searchService" ref="searchService"/>
		<property name="userService" ref="userService"/>
    </bean>

    <bean id="noteService" class="bugeater.service.impl.NoteServiceImpl">
		<property name="mailService" ref="mailService"/>
        <property name="noteDao" ref="noteDao"/>
		<property name="searchService" ref="searchService"/>
		<property name="userService" ref="userService"/>
    </bean>
	
    <bean id="releaseVersionService" class="bugeater.service.impl.ReleaseVersionServiceImpl">
        <property name="releaseVersionDao" ref="releaseVersionDao"/>
    </bean>

</beans>
